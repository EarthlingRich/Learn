// Run in https://jscomplete.com/playground/rgs2.1

class Form extends React.Component {
  state = { userName: "" }
  handleSubmit = async (e) => {
    e.preventDefault()
    const response = await axios.get(`https://api.github.com/users/${this.state.userName}`)
    this.props.onSubmit(response.data)
    this.setState({ userName: "" })
  }
  render() {
    return (
      <form onSubmit={this.handleSubmit}>
        <input value={this.state.userName} onChange={e => this.setState({ userName: e.target.value})} type="text" placeholder="GitHub username" required></input>
        <button>Add card</button>
      </form>
    )
  }
}

class Card extends React.Component {
  render() {
    return (
      <div className="github-profile">
        <img src={this.props.avatar_url}></img>
        <div className="info">
          <div className="name">{this.props.name}</div>
          <div className="company">{this.props.company}</div>
        </div>
      </div>
    )
  }
}

class CardList extends React.Component {
  render() {
    return (
      <div>
        {this.props.profiles.map(profile => <Card key={profile.id} {...profile}/>)}
      </div>
    )
  }
}

class App extends React.Component {
  state = {
    profiles: []
  }
  addNewProfile = (profile) => {
    this.setState(prevState => ({
      profiles: [...prevState.profiles, profile]
    }))
  }
  render() {
    return (
      <div>
        <div className="header">{this.props.title}</div>
        <Form onSubmit={this.addNewProfile}/>
        <CardList profiles={this.state.profiles}/>
      </div>
    )
  }
}

ReactDOM.render(
	<App title="The GitHub Cards App" />,
  mountNode,
)